{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Estudos\\\\Typescript\\\\minha-carteira-dashboard\\\\src\\\\components\\\\HistoryBox\\\\index.tsx\";\nimport React from 'react';\nimport { ResponsiveContainer, LineChart, Line, XAxis, CartesianGrid, Tooltip } from 'recharts';\nimport formatCurrency from '../../utils/formatCurrency';\nimport { Container, ChartContainer, Header, LegendContainer, Legend } from './styles';\n\nconst HistoryBox = ({\n  data,\n  lineColorAmountEntry,\n  lineColorAmountOutput\n}) => /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }\n}, \"Hist\\xF3rico de saldo\"), /*#__PURE__*/React.createElement(LegendContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Legend, {\n  color: lineColorAmountEntry,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }\n}, \"Entradas\")), /*#__PURE__*/React.createElement(Legend, {\n  color: lineColorAmountOutput,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }\n}, \"Sa\\xEDdas\")))), /*#__PURE__*/React.createElement(ChartContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(LineChart, {\n  data: data,\n  margin: {\n    top: 5,\n    right: 20,\n    left: 20,\n    bottom: 5\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(CartesianGrid, {\n  strokeDasharray: \"3 3\",\n  stroke: \"#cecece\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(XAxis, {\n  dataKey: \"month\",\n  stroke: \"#cecece\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(Tooltip, {\n  formatter: value => formatCurrency(Number(value)),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(Line, {\n  type: \"monotone\",\n  dataKey: \"amountEntry\",\n  name: \"Entradas\",\n  stroke: lineColorAmountEntry,\n  strokeWidth: 5,\n  dot: {\n    r: 5\n  },\n  activeDot: {\n    r: 8\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }\n}), /*#__PURE__*/React.createElement(Line, {\n  type: \"monotone\",\n  dataKey: \"amountOutput\",\n  name: \"Sa\\xEDdas\",\n  stroke: lineColorAmountOutput,\n  strokeWidth: 5,\n  dot: {\n    r: 5\n  },\n  activeDot: {\n    r: 8\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }\n})))));\n\n_c = HistoryBox;\nexport default HistoryBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryBox\");","map":{"version":3,"sources":["D:/Projects/Estudos/Typescript/minha-carteira-dashboard/src/components/HistoryBox/index.tsx"],"names":["React","ResponsiveContainer","LineChart","Line","XAxis","CartesianGrid","Tooltip","formatCurrency","Container","ChartContainer","Header","LegendContainer","Legend","HistoryBox","data","lineColorAmountEntry","lineColorAmountOutput","top","right","left","bottom","value","Number","r"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    ResponsiveContainer,\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n} from 'recharts';\r\n\r\nimport formatCurrency from '../../utils/formatCurrency';\r\n\r\nimport { \r\n    Container, \r\n    ChartContainer,\r\n    Header,\r\n    LegendContainer,\r\n    Legend,\r\n}  from './styles';\r\n\r\n\r\ninterface IHistoryBoxProps {\r\n    data: {\r\n        month: string;\r\n        amountEntry: number;\r\n        amountOutput: number;\r\n    }[],\r\n    lineColorAmountEntry: string;\r\n    lineColorAmountOutput: string;\r\n}\r\n\r\nconst HistoryBox: React.FC<IHistoryBoxProps> = ({\r\n    data, lineColorAmountEntry, lineColorAmountOutput\r\n}) => (\r\n    <Container>\r\n        <Header>\r\n            <h2>Histórico de saldo</h2>\r\n\r\n            <LegendContainer>\r\n                <Legend color={lineColorAmountEntry}>\r\n                    <div></div>\r\n                    <span>Entradas</span>\r\n                </Legend>\r\n           \r\n                <Legend color={lineColorAmountOutput}>\r\n                    <div></div>\r\n                    <span>Saídas</span>\r\n                </Legend>\r\n            </LegendContainer>\r\n        </Header>\r\n\r\n        <ChartContainer>\r\n            <ResponsiveContainer>\r\n                <LineChart data={data} margin={{ top: 5, right: 20, left: 20, bottom: 5 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#cecece\" />\r\n                    <XAxis dataKey=\"month\" stroke=\"#cecece\" />\r\n                    <Tooltip formatter={(value) => formatCurrency(Number(value))} />\r\n                    <Line \r\n                        type=\"monotone\"                \r\n                        dataKey=\"amountEntry\"\r\n                        name=\"Entradas\"\r\n                        stroke={lineColorAmountEntry}\r\n                        strokeWidth={5}\r\n                        dot={{ r: 5}}\r\n                        activeDot={{ r: 8}}\r\n                    />\r\n                    <Line \r\n                        type=\"monotone\"                \r\n                        dataKey=\"amountOutput\"\r\n                        name=\"Saídas\"\r\n                        stroke={lineColorAmountOutput}\r\n                        strokeWidth={5}\r\n                        dot={{ r: 5}}\r\n                        activeDot={{ r: 8}}\r\n                    />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </ChartContainer>\r\n    </Container>\r\n)\r\n\r\nexport default HistoryBox;"]},"metadata":{},"sourceType":"module"}