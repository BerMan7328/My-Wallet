{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Estudos\\\\Typescript\\\\minha-carteira-dashboard\\\\src\\\\components\\\\MainHeader\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport Toggle from '../Toggle';\nimport emojis from '../../utils/emojis';\nimport { useTheme } from '../../hooks/theme';\nimport { Container, Profile, Welcome, UserName } from './styles';\n\nconst MainHeader = () => {\n  _s();\n\n  const {\n    toggleTheme,\n    theme\n  } = useTheme();\n  const [darkTheme, setDarkTheme] = useState(() => theme.title === 'dark' ? true : false);\n\n  const handleChangeTheme = () => {\n    setDarkTheme(!darkTheme);\n    toggleTheme();\n  };\n\n  const emoji = useMemo(() => {\n    const indice = Math.floor(Math.random() * emojis.length);\n    return emojis[indice];\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toggle, {\n    labelLeft: \"Light\",\n    labelRight: \"Dark\",\n    checked: darkTheme,\n    onChange: handleChangeTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Welcome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Ol\\xE1, \", emoji), /*#__PURE__*/React.createElement(UserName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Rodrigo Gon\\xE7alves\")));\n};\n\n_s(MainHeader, \"qg289vI6+YreE+gs6QBDMO9KYVk=\", false, function () {\n  return [useTheme];\n});\n\n_c = MainHeader;\nexport default MainHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainHeader\");","map":{"version":3,"sources":["D:/Projects/Estudos/Typescript/minha-carteira-dashboard/src/components/MainHeader/index.tsx"],"names":["React","useMemo","useState","Toggle","emojis","useTheme","Container","Profile","Welcome","UserName","MainHeader","toggleTheme","theme","darkTheme","setDarkTheme","title","handleChangeTheme","emoji","indice","Math","floor","random","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,SACIC,SADJ,EAEIC,OAFJ,EAGIC,OAHJ,EAIIC,QAJJ,QAKQ,UALR;;AAQA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAyBP,QAAQ,EAAvC;AAEA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,MAAMU,KAAK,CAACG,KAAN,KAAgB,MAAhB,GAAyB,IAAzB,GAAgC,KAAvC,CAA1C;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BF,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAF,IAAAA,WAAW;AACd,GAHD;;AAKA,QAAMM,KAAK,GAAGhB,OAAO,CAAC,MAAM;AACxB,UAAMiB,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,MAAM,CAACkB,MAAlC,CAAf;AACA,WAAOlB,MAAM,CAACc,MAAD,CAAb;AACH,GAHoB,EAGnB,EAHmB,CAArB;AAKA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,UAAU,EAAC,MAFf;AAGI,IAAA,OAAO,EAAEL,SAHb;AAII,IAAA,QAAQ,EAAEG,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeC,KAAf,CADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CARJ,CADJ;AAeH,CA9BD;;GAAMP,U;UAC6BL,Q;;;KAD7BK,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useMemo, useState } from 'react';\r\nimport Toggle from '../Toggle';\r\n\r\nimport emojis from '../../utils/emojis';\r\n\r\nimport { useTheme } from '../../hooks/theme';\r\n\r\nimport { \r\n    Container, \r\n    Profile, \r\n    Welcome, \r\n    UserName, \r\n}  from './styles';\r\n\r\n\r\nconst MainHeader: React.FC = () => {\r\n    const { toggleTheme, theme } = useTheme();\r\n\r\n    const [darkTheme, setDarkTheme] = useState(() => theme.title === 'dark' ? true : false);\r\n\r\n    const handleChangeTheme = () => {\r\n        setDarkTheme(!darkTheme);\r\n        toggleTheme();\r\n    }\r\n\r\n    const emoji = useMemo(() => {\r\n        const indice = Math.floor(Math.random() * emojis.length);\r\n        return emojis[indice];\r\n    },[]);\r\n\r\n    return (\r\n        <Container>\r\n            <Toggle\r\n                labelLeft=\"Light\"\r\n                labelRight=\"Dark\"\r\n                checked={darkTheme}\r\n                onChange={handleChangeTheme}\r\n            />\r\n\r\n            <Profile>\r\n                <Welcome>Olá, {emoji}</Welcome>\r\n                <UserName>Rodrigo Gonçalves</UserName>\r\n            </Profile>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MainHeader;"]},"metadata":{},"sourceType":"module"}